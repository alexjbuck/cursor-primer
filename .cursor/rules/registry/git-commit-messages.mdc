---
description: Guidelines for writing multi-line git commit messages in terminal commands
globs: 
alwaysApply: false
---
# Git Commit Message Formatting in Terminal Commands

## Context
When writing git commit messages in terminal commands (especially in automation or AI-generated commands), attempting to use newline characters (\n) directly in the command string will fail. This is because terminal commands must be single-line instructions.

## Key Rules

1. **Use Multiple -m Flags**
   - ❌ Don't use \n or literal newlines in the commit message
   - ✅ Use multiple `-m` flags for each line of the commit message

## Examples

### ❌ Incorrect: Using newlines
```bash
# This will fail
git commit -m "First line
Second line
Third line"

# This will also fail
git commit -m "First line\nSecond line\nThird line"
```

### ✅ Correct: Using multiple -m flags
```bash
git commit -m "First line" -m "Second line" -m "Third line"
```

### Real-world Example

#### ❌ Incorrect: Complex commit with newlines
```bash
git commit -m "Initial commit: Project setup

- Configure build system
- Add dependencies
- Setup testing framework
- Add documentation"
```

#### ✅ Correct: Complex commit with multiple -m flags
```bash
git commit -m "Initial commit: Project setup" -m "- Configure build system" -m "- Add dependencies" -m "- Setup testing framework" -m "- Add documentation"
```

## Implementation Guidelines

1. **First Line (Summary)**
   - Use the first `-m` flag for the commit summary
   - Keep it under 50 characters
   - Example: `-m "Fix: Update user authentication"`

2. **Subsequent Lines (Details)**
   - Use additional `-m` flags for each detail line
   - Each flag creates a new paragraph
   - Example: `-m "- Updated JWT validation" -m "- Added refresh token support"`

3. **Lists**
   - Use separate `-m` flags for each list item
   - Start each item with a hyphen for consistency
   - Example: `-m "- Item 1" -m "- Item 2"`

## Error Prevention

Common patterns to avoid:
1. Literal newlines in command strings
2. Escaped newlines (\n)
3. Backtick or quote wrapping of multi-line strings

## Related Rules
- Shell command formatting
- GitHub Actions workflow commands
- CI/CD pipeline commands
